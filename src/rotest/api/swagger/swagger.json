{
  "info": {
    "version": "1.0.0",
    "description": "Rotest Swagger for resource and test management",
    "license": {
      "name": "MIT"
    },
    "title": "Rotest API"
  },
  "paths": {
    "resources/lock_resources": {
      "POST": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseModel"
                }
              }
            },
            "description": null
          }
        },
        "operationID": "LockResources",
        "description": "Lock the given resources one by one",
        "parameters": [
          {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ResourceDescriptorModel"
              },
              "type": "array"
            },
            "description": "descriptors of the tests",
            "required": true,
            "name": "descriptors",
            "in": "body"
          }
        ],
        "tags": [
          "Resources"
        ]
      }
    },
    "resources/cleanup_user": {
      "POST": {
        "responses": {},
        "operationID": "CleanupUser",
        "description": "Cleaning up user's requests and locked resources",
        "parameters": [],
        "tags": [
          "Resources"
        ]
      }
    },
    "tests/start_composite": {
      "POST": {
        "responses": {},
        "operationID": "StartComposite",
        "description": "Update the test data to 'in progress' state and set the start time",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "resources/query_resources": {
      "GET": {
        "responses": {},
        "operationID": "QueryResources",
        "description": "Find and return the resources that answer the client's query",
        "parameters": [],
        "tags": [
          "Resources"
        ]
      }
    },
    "tests/should_skip": {
      "GET": {
        "responses": {},
        "operationID": "ShouldSkip",
        "description": "Check if the test passed in the last run according to results DB",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "tests/start_test_run": {
      "POST": {
        "responses": {},
        "operationID": "StartTestRun",
        "description": "Initialize the tests run data",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "tests/stop_composite": {
      "POST": {
        "responses": {},
        "operationID": "StopComposite",
        "description": "Save the composite test's data",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "resources/update_fields": {
      "POST": {
        "responses": {},
        "operationID": "UpdateFields",
        "description": "Update content in the server's DB",
        "parameters": [],
        "tags": [
          "Resources"
        ]
      }
    },
    "tests/stop_test": {
      "POST": {
        "responses": {},
        "operationID": "StopTest",
        "description": "\"End a test run",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "resources/release_resources": {
      "POST": {
        "responses": {},
        "operationID": "ReleaseResources",
        "description": "Release the given resources one by one",
        "parameters": [
          {
            "schema": {
              "type": "object"
            },
            "description": null,
            "required": true,
            "name": "resources",
            "in": "body"
          }
        ],
        "tags": [
          "Resources"
        ]
      }
    },
    "tests/update_run_data": {
      "POST": {
        "responses": {},
        "operationID": "UpdateRunData",
        "description": "Update the tests run data",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "tests/add_test_result": {
      "POST": {
        "responses": {},
        "operationID": "AddTestResult",
        "description": "Add a result to the test",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    },
    "tests/start_test": {
      "POST": {
        "responses": {},
        "operationID": "StartTest",
        "description": "\"Update the test data to 'in progress' state and set the start time",
        "parameters": [],
        "tags": [
          "Tests"
        ]
      }
    }
  },
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/rotest/api/",
  "host": "",
  "components": {
    "schemas": {
      "ResourceDescriptorModel": {
        "properties": {
          "class": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          }
        },
        "type": "object",
        "description": null,
        "title": "Resource Descriptor"
      },
      "TokenResponseModel": {
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "type": "object",
        "description": null,
        "title": "Token Response"
      }
    }
  },
  "compontents": {
    "schemas": {
      "ResourceDescriptorModel": {
        "description": null,
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          }
        },
        "title": "Resource Descriptor"
      },
      "TokenResponseModel": {
        "description": null,
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "title": "Token Response"
      }
    }
  },
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ]
}